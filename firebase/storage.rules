rules_version = '2';
service firebase.storage {
  match /b/{bucket}/o {
    match /{allPaths=**} {
      allow read: if request.auth != null;
    }

    match /icons/{allPaths=**} {
      allow read: if request.auth != null;
      allow create: if request.auth != null
      	&& request.resource.size < 1 * 1024 * 1024 // Less than 1MB
        && request.resource.contentType.matches('image/jpeg')
      ;
      allow update: if request.auth != null
      	&& request.resource.size < 1 * 1024 * 1024 // Less than 1MB
        && request.resource.contentType.matches('image/jpeg')
      ;
      allow delete: if request.auth != null
    }

    match /images/{allPaths=**} {
      allow read: if request.auth != null;
      allow create: if request.auth != null
      	&& request.resource.size < 1 * 1024 * 1024 // Less than 1MB
        && request.resource.contentType.matches('image/jpeg')
      ;
      allow update: if request.auth != null
      	&& request.resource.size < 1 * 1024 * 1024 // Less than 1MB
        && request.resource.contentType.matches('image/jpeg')
      ;
      allow delete: if request.auth != null
    }

    match /thumbnails/{allPaths=**} {
      allow read: if request.auth != null;
      allow create: if request.auth != null
      	&& request.resource.size < 1 * 1024 * 1024 // Less than 1MB
        && request.resource.contentType.matches('image/jpeg')
      ;
      allow update: if request.auth != null
      	&& request.resource.size < 1 * 1024 * 1024 // Less than 1MB
        && request.resource.contentType.matches('image/jpeg')
      ;
      allow delete: if request.auth != null
    }

    match /users/{userId} {

      match /icons/{iconId} {
        allow create: if request.auth.uid == userId
          && request.resource.size < 1 * 1024 * 1024 // Less than 1MB
          && request.resource.contentType.matches('image/jpeg')
        ;
        allow update: if request.auth.uid == userId
          && request.resource.size < 1 * 1024 * 1024 // Less than 1MB
          && request.resource.contentType.matches('image/jpeg')
        ;
        allow delete: if request.auth.uid == userId;
      }

      match /images/{imageId} {
        allow create: if request.auth.uid == userId
          && request.resource.size < 1 * 1024 * 1024 // Less than 1MB
          && request.resource.contentType.matches('image/jpeg')
        ;
        allow update: if request.auth.uid == userId
          && request.resource.size < 1 * 1024 * 1024 // Less than 1MB
          && request.resource.contentType.matches('image/jpeg')
        ;
        allow delete: if request.auth.uid == userId;
      }

      match /thumbnails/{thumbnailId} {
        allow create: if request.auth.uid == userId
          && request.resource.size < 1 * 1024 * 1024 // Less than 1MB
          && request.resource.contentType.matches('image/jpeg')
        ;
        allow update: if request.auth.uid == userId
          && request.resource.size < 1 * 1024 * 1024 // Less than 1MB
          && request.resource.contentType.matches('image/jpeg')
        ;
        allow delete: if request.auth.uid == userId;
      }

    }
  }
}